{"version":3,"sources":["Components/UxAndUi.js","Components/GigaradModalPage.js"],"names":["useStyles","makeStyles","theme","heroContainer","flexGrow","width","height","rowDiv","display","flexDirection","alignItems","justifyContent","columnDiv","UxAndUi","props","classes","className","createMuiTheme","palette","type","closeButton","position","top","right","zIndex","closeButtonSmallScreen","overlay","backgroundColor","left","bottom","touchAction","userSelect","modal","padding","spacing","paper","background","border","boxShadow","shadows","myPaper","GigaradModalPage","matches","useMediaQuery","rootRef","React","useRef","history","useHistory","ref","disablePortal","open","scroll","aria-labelledby","aria-describedby","fullWidth","maxWidth","paperFullWidth","children","onClick","e","stopPropagation","console","log","length","goBack","push","color","fontSize","defaultProps"],"mappings":"wHAAA,4CAMMA,GANN,MAMkBC,aAAW,SAACC,GAAD,MAAY,CACvCC,cAAe,CACbC,SAAU,EACVC,MAAO,MACPC,OAAQ,OAEVC,OAAQ,CACNC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTJ,QAAS,OACTC,cAAe,SACfJ,MAAO,aAoEIQ,UAhEf,SAAiBC,GACf,IAAMC,EAAUf,IAEhB,OACE,kBAAC,IAAD,KACE,yBAAKgB,UAAWD,EAAQR,QACtB,yBAAKS,UAAWD,EAAQH,WACtB,qFACA,0OAFF,qCAIE,8QAEF,yBAAKI,UAAWD,EAAQZ,eACtB,yBAAKa,UAAU,eAGnB,6BACA,6BACA,yBAAKA,UAAWD,EAAQR,QACtB,yBAAKS,UAAWD,EAAQZ,eACtB,yBAAKa,UAAU,cAEjB,yBAAKA,UAAWD,EAAQH,WACtB,2CACA,+HACA,4BACE,yDACA,2DACA,4CACA,oEACA,yDACA,oDAIN,6BACA,6BACA,0VACA,8GACA,6BACA,6BACA,yBAAKI,UAAWD,EAAQR,QACtB,yBAAKS,UAAWD,EAAQH,WACtB,6CACA,oDAFF,4HAIE,wDAJF,gJAME,2CANF,8HAQE,oDARF,yHAWA,yBAAKI,UAAWD,EAAQZ,eACtB,yBAAKa,UAAU,eAGnB,6BACA,6BACA,mI,gCCpFN,0GAYMd,EAAQe,YAAe,CAC3BC,QAAS,CACPC,KAAM,UAKJnB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkB,YAAa,CACXC,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,MAEVC,uBAAwB,CACtBJ,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,MAEVE,QAAS,CACPC,gBAAiB,wBACjBN,SAAU,QACVO,KAAM,EACNL,MAAO,EACPD,IAAK,EACLO,OAAQ,EACRC,YAAa,OACbC,WAAY,QAEdC,MAAO,CACLxB,QAAS,OACTyB,QAAS/B,EAAMgC,QAAQ,GACvBxB,WAAY,SACZC,eAAgB,UAElBwB,MAAO,CACL9B,MAAO,IACPsB,gBAAiBzB,EAAMgB,QAAQkB,WAAWD,MAC1CE,OAAQ,iBACRC,UAAWpC,EAAMqC,QAAQ,GACzBN,QAAS/B,EAAMgC,QAAQ,EAAG,EAAG,IAE/BM,QAAS,CACPnC,MAAO,yBAIX,SAASoC,EAAiB3B,GACxB,IAAMC,EAAUf,IACV0C,EAAUC,YAAc,qBACxBC,EAAUC,IAAMC,OAAO,MACvBC,EAAUC,cAEhB,OACE,kBAAC,IAAD,CAAe9C,MAAOA,GACpB,yBAAKc,UAAWD,EAAQW,QAASuB,IAAKL,GACpC,kBAAC,IAAD,CACEM,eAAa,EACfC,MAAI,EACJC,OAAO,QACPC,kBAAgB,sBAChBC,mBAAiB,4BACjBC,WAAS,EACTC,SAAS,KACTzC,QAAS,CAAC0C,eAAgB1C,EAAQyB,UAElC,kBAAC,IAAD,KACG1B,EAAM4C,WAGT,kBAAC,IAAD,CACEC,QAAS,SAACC,GACRA,EAAEC,kBACFC,QAAQC,IAAIhB,EAAQiB,QAChBjB,EAAQiB,OAAS,EACrBjB,EAAQkB,SAERlB,EAAQmB,KAAK,MAGfC,MAAM,UACNnD,UAAW0B,EAAU3B,EAAQK,YAAcL,EAAQU,wBAEnD,kBAAC,IAAD,CAAW2C,SAAS,aAU9B3B,EAAiB4B,aAAe,GAGjB5B,O","file":"static/js/9.a77a20d5.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GigaradModalPage from './GigaradModalPage';\nimport './UxAndUi.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  heroContainer: {\n    flexGrow: 1,\n    width: '70%',\n    height: '70%'\n  },\n  rowDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  columnDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n}));\n\nfunction UxAndUi(props) {\n  const classes = useStyles();\n\n  return(\n    <GigaradModalPage>\n      <div className={classes.rowDiv}>\n        <div className={classes.columnDiv}>\n          <h3>Crafting Sleek and Visually Appealing UI / UX Designs</h3>\n          <p>At Gigarad, we blend data-driven visions and originality to eliminate conflict, tackle anxiety, and build user confidence. We create remarkable digital experiences to deliver tangible business solutions.</p>\n          Less Speculation. Better Outcomes.\n          <p>We use time-tested design methodologies to help you make your product better, all with real user data and super-fast iterations. Our design squad is a small design freaks who will help you build an engaging application quickly and easily.</p>\n        </div>\n        <div className={classes.heroContainer}>\n          <div className=\"uauhero1\" />\n        </div>\n      </div>\n      <br />\n      <br />\n      <div className={classes.rowDiv}>\n        <div className={classes.heroContainer}>\n          <div className=\"uauhero2\" />\n        </div>\n        <div className={classes.columnDiv}>\n          <h3>What We Do?</h3>\n          <p>Augment your brand’s value by connecting the real and digital with UI / UX design services.</p>\n          <ul>\n            <li>UX/UI Strategy and Design</li>\n            <li>Strategic Design Consulting</li>\n            <li>Media Design</li>\n            <li>Branding & Corporate Identity Design</li>\n            <li>Responsive Website Design</li>\n            <li>Mobile App Design</li>\n          </ul>\n        </div>\n      </div>\n      <br />\n      <br />\n      <p>Gigarad is a user experience and UI design organization focused on improving conversion and increasing customer engagement. Our UI/UX design abilities do not stop at mobile apps, web, or applications. As a UX design agency, our creations reflect outstanding usability while fully embracing your brand's personality.</p>\n      <p>We enrich products through the thoughtful application of design and technology.</p>\n      <br />\n      <br />\n      <div className={classes.rowDiv}>\n        <div className={classes.columnDiv}>\n          <h3>How we do it?</h3>\n          <h4>User Driven Research</h4>\n          We kick off our UX/UI project by gathering, evaluating, and defining requirements to understand customer goals & emotions\n          <h4>Intelligent Architecture</h4>\n          We believe users should quickly find what they seek. We organize and arrange information based on the concept of ‘finding- ability’\n          <h4>Wireframing</h4>\n          Our blueprints reveal the imagined structure of the entire creation. It demonstrates what goes where on a page real estate.\n          <h4>Clickable prototypes</h4>\n          Our detailed illustrative prototypes uncover the underlying flow of the entire product even before it is fully built.\n        </div>\n        <div className={classes.heroContainer}>\n          <div className=\"uauhero3\" />\n        </div>\n      </div>\n      <br />\n      <br />\n      <h3>Talk to us! Our ultimate target is to build products that are truly a ‘delight-to-use’</h3>\n    </GigaradModalPage>\n  );\n}\n\nexport default UxAndUi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { useHistory } from 'react-router-dom';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  closeButton: {\n    position: 'absolute',\n    top: '5px',\n    right: '8px',\n    zIndex: 1300,\n  },\n  closeButtonSmallScreen: {\n    position: 'absolute',\n    top: '0px',\n    right: '3px',\n    zIndex: 1300,\n  },\n  overlay: {\n    backgroundColor: 'rgba(31, 31, 31, 0.4)',\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    touchAction: 'none',\n    userSelect: 'none',\n  },\n  modal: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  myPaper: {\n    width: 'calc(100% - 96px)'\n  },\n}));\n\nfunction GigaradModalPage(props) {\n  const classes = useStyles();\n  const matches = useMediaQuery('(min-width:975px)');\n  const rootRef = React.useRef(null);\n  const history = useHistory();\n\n  return(\n    <ThemeProvider theme={theme}>\n      <div className={classes.overlay} ref={rootRef}>\n        <Dialog\n          disablePortal\n        open\n        scroll=\"paper\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n        fullWidth\n        maxWidth=\"md\"\n        classes={{paperFullWidth: classes.myPaper}}\n      >\n        <DialogContent>\n          {props.children}\n        </DialogContent>\n      </Dialog>\n        <IconButton\n          onClick={(e) => {\n            e.stopPropagation();\n            console.log(history.length);\n            if (history.length > 2) {\n            history.goBack();\n          } else {\n            history.push('/');\n          }\n          }}\n          color=\"inherit\"\n          className={matches ? classes.closeButton : classes.closeButtonSmallScreen}\n        >\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nGigaradModalPage.propTypes = {\n};\n\nGigaradModalPage.defaultProps = {\n};\n\nexport default GigaradModalPage;\n"],"sourceRoot":""}